worker_processes auto;

events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

http {
    aio on;
    tcp_nopush on;
    include mime.types;

    #    limit_req_zone $binary_remote_addr zone=by_ip:32m rate=10000r/s;
    #    limit_req_status 500;
	#log_format custom '$remote_addr - $remote_user [$time_local] "$request" '
	#                           '$status $body_bytes_sent "$http_referer" '
	#                           '"$http_user_agent" "$http_x_forwarded_for"';

	log_format custom '$remote_addr ^ $remote_user [$time_local] ^ '
						'$request ^ $status ^ $body_bytes_sent ^ '
						'$http_referer ^ $http_user_agent ^ $http_x_forwarded_for';
	access_log /var/log/nginx/access.log custom;


     upstream backend-server {
         server backend:3000;
     }


    server {
        listen 80;
        listen [::]:80;
        server_name localhost;
        tcp_nodelay on;
        #?????
        client_max_body_size 11m;

        gzip on;
        gzip_types text/xml;
        gzip_types text/javascript;
        gzip_types application/json;
        gzip_types application/x-javascript;
        gzip_types application/javascript;
        gzip_types application/x-font-ttf;
        gzip_types application/ttf;
        gzip_types image/x-icon;
        gzip_types text/plain;
        gzip_types text/css;
        gzip_disable "msie6";

#         location /static {
#             alias /opt/services/djangoapp/static/;
#         }

        location /health {
            access_log off;
            return 200 "nginx is healthy\n";
        }

        location /pgadmin {
            proxy_pass http://pgadmin/;
            proxy_http_version 1.1;
            proxy_set_header X-Script-Name /pgadmin;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            proxy_redirect off;
        }

        location /api {
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#             proxy_set_header Host $http_host;
            #limit_req zone=one burst=15;
            proxy_pass http://backend:3000/api;
            proxy_http_version 1.1;

            proxy_redirect off;
#             proxy_pass http://backend-server/api;
        }
    }
}

